{"version":3,"file":"d056f737-a5bd8ecfa90e8e5c04eb.js","mappings":"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","sources":["webpack://aquib-vadsaria-portfolio/./src/components/home.js"],"sourcesContent":["import { gsap } from \"gsap\"\nimport React, { useEffect, useLayoutEffect, useRef } from \"react\"\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\"\nimport { LinkHover } from \"../components/link-hover\"\nimport Palette from \"../palette\"\nimport { useSmallScreenMediaQuery } from \"../hooks/useMediaQuery\"\nimport { useIsMounted } from \"../hooks/useIsMounted\"\nimport { NavigationNew } from \"../components/navigation-new\"\nimport \"splitting/dist/splitting.css\"\nimport \"splitting/dist/splitting-cells.css\"\nimport { touchMoveListerner } from \"../util\"\n\nconst overlayContainer = css`\n  position: absolute;\n  z-index: 3;\n  background: transparent;\n`\n\nconst container = css`\n  display: flex;\n  flex-direction: row;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  color: white;\n  position: relative;\n  z-index: 2;\n  background: ${Palette.DARK};\n  visibility: hidden;\n  opacity: 0;\n  scroll-snap-align: start;\n`\n\nconst smallScreenContainer = css`\n  flex-direction: column;\n`\n\nconst skillsLayeredTitle = css`\n  color: ${Palette.MEDIUM};\n  filter: grayscale(0%);\n  text-shadow: none;\n`\n\nconst skills = isSmallScreen => css`\n  background: ${Palette.DARK};\n  transform: ${isSmallScreen ? \"translateX(-100%)\" : \"translateY(-100%)\"};\n  ${!isSmallScreen &&\n    css`&:hover {\n    ${skillsLayeredTitle}`}\n  ${isSmallScreen && skillsLayeredTitle}\n  }\n`\n\nconst aboutLayeredTitle = css`\n  color: #c24d2c;\n  filter: grayscale(0%);\n  text-shadow: none;\n`\n\nconst about = isSmallScreen => css`\n  background: ${Palette.LIGHT};\n  text-shadow: 0px 0px 25px #807878;\n  transform: ${isSmallScreen ? \"translateX(100%)\" : \"translateY(100%)\"};\n  ${!isSmallScreen &&\n    css`&:hover {\n    ${aboutLayeredTitle}`}\n    ${isSmallScreen && aboutLayeredTitle}\n  }\n`\n\nconst projectsLayeredTitle = css`\n  color: ${Palette.LIGHT};\n  filter: grayscale(0%);\n  text-shadow: none;\n`\n\nconst projects = isSmallScreen => css`\n  background: ${Palette.LIGHT_DARK};\n  transform: ${isSmallScreen ? \"translateX(100%)\" : \"translateY(100%)\"};\n  ${!isSmallScreen &&\n    css`&:hover {\n    ${projectsLayeredTitle}`}\n    ${isSmallScreen && projectsLayeredTitle}\n  }\n`\n\nconst rotatedTitle = `\nwriting-mode: vertical-rl;\ntext-orientation: sideways;\ntransform: rotate(180deg);\ntext-transform: uppercase;\nletter-spacing: 25px;\ncolor: transparent;\ntext-shadow: 0px 0px 25px white;\nfilter: grayscale(100%);\n`\n\nconst title = isSmallScreen => css`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  text-shadow: 0px 0px 20px white;\n  font-size: ${isSmallScreen ? \"8vh\" : \"10vh\"};\n  ${!isSmallScreen && rotatedTitle}\n`\n\nconst svgHidden = css`\n  position: absolute;\n  overflow: hidden;\n  width: 0;\n  height: 0;\n  pointer-events: none;\n`\n\nexport const Home = ({ overlay, homeTimeLine, parentId }) => {\n  const isMounted = useIsMounted()\n  const isSmallScreen = useSmallScreenMediaQuery()\n  const skillLinkRef = useRef()\n  const aboutLinkRef = useRef()\n  const experienceLinkRef = useRef()\n  const containerIndexId = `${parentId}-my-index`\n  const aboutIndexId = `${parentId}-index-about`\n  const skillsIndexId = `${parentId}-index-skills`\n  const experienceIndexId = `${parentId}-index-experience`\n  const indexElTo = isSmallScreen ? { x: \"0%\" } : { y: \"0%\" }\n\n  const setShowDetails = id => {\n    if (!overlay) {\n      gsap.to(\"#landing\", {\n        duration: 0.5,\n        scrollTo: `#${id}`,\n        ease: \"none\",\n      })\n      return\n    }\n    homeTimeLine.reverse().then(() => {\n      gsap\n        .to(\"#landing\", {\n          duration: 0.5,\n          scrollTo: `#${id}`,\n          ease: \"none\",\n        })\n        .then(() => {\n          document.getElementById(\"landing\").style.overflowY = \"auto\"\n          document.getElementById(\"my-experience\").style.overflowX = \"auto\"\n          document\n            .getElementById(\"landing\")\n            .removeEventListener(\"touchmove\", touchMoveListerner, {\n              passive: false,\n            })\n          document\n            .getElementById(\"landing\")\n            .removeEventListener(\"wheel\", touchMoveListerner, {\n              passive: false,\n            })\n        })\n    })\n  }\n\n  useLayoutEffect(() => {\n    skillLinkRef.current && new LinkHover(skillLinkRef.current)\n    aboutLinkRef.current && new LinkHover(aboutLinkRef.current)\n    experienceLinkRef.current && new LinkHover(experienceLinkRef.current)\n    if (isSmallScreen === undefined) {\n      return\n    }\n\n    if (overlay) {\n      //   homeTimeLine.progress(1)\n      return\n    }\n    homeTimeLine\n      .to(\n        `#${containerIndexId}`,\n        {\n          autoAlpha: 1,\n        },\n        0.2\n      )\n      .to(`#${aboutIndexId}`, 0.75, indexElTo, \"-=0.3\")\n      .to(`#${skillsIndexId}`, 0.75, indexElTo, \"-=0.5\")\n      .to(\n        `#${experienceIndexId}`,\n        0.75,\n        {\n          ...indexElTo,\n          onReverseComplete: () => {\n            // setShowArticle(true)\n          },\n          onStart: () => {\n            // if (showArticle) {\n            //   setShowArticle(false)\n            // }\n          },\n          onComplete: () => {\n            // const indexEl = document.querySelector(\"#my-index\")\n            // const articleContainerEl = document.querySelector(\n            //   \"#content-container\"\n            // )\n            // indexEl.style.background = \"transparent\"\n            // articleContainerEl.style.visibility = \"visible\"\n            // articleContainerEl.style.opacity = 1\n          },\n        },\n        \"-=0.5\"\n      )\n      .play()\n  }, [isSmallScreen, overlay])\n\n  return (\n    <div\n      id={containerIndexId}\n      css={[\n        container,\n        isSmallScreen && smallScreenContainer,\n        overlay && overlayContainer,\n      ]}\n    >\n      <svg css={svgHidden}>\n        <defs>\n          <filter id=\"filter-5\">\n            <feTurbulence\n              type=\"fractalNoise\"\n              baseFrequency=\"0.01 0.7\"\n              numOctaves=\"5\"\n              result=\"warp\"\n            />\n            <feDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              scale=\"0\"\n              in=\"SourceGraphic\"\n              in2=\"warp\"\n            />\n          </filter>\n          <filter id=\"filter-6\">\n            <feTurbulence\n              type=\"fractalNoise\"\n              baseFrequency=\"0.01 0.07\"\n              numOctaves=\"5\"\n              seed=\"2\"\n              result=\"noise\"\n            />\n            <feDisplacementMap\n              in=\"SourceGraphic\"\n              in2=\"warp\"\n              scale=\"0\"\n              xChannelSelector=\"R\"\n              yChannelSelector=\"B\"\n            />\n          </filter>\n        </defs>\n      </svg>\n      {isSmallScreen && overlay && (\n        <NavigationNew\n          showCross={true}\n          color={Palette.DARK}\n          homeTimeLine={homeTimeLine}\n          parentId={parentId}\n        />\n      )}\n      <span\n        id={aboutIndexId}\n        css={[title(isSmallScreen), about(isSmallScreen)]}\n        onClick={() => setShowDetails(\"my-about\")}\n      >\n        <label ref={aboutLinkRef}>About</label>\n      </span>\n      <span\n        id={skillsIndexId}\n        css={[title(isSmallScreen), skills(isSmallScreen)]}\n        onClick={() => setShowDetails(\"my-skills\")}\n      >\n        <label ref={skillLinkRef}>Skills</label>\n      </span>\n      <span\n        id={experienceIndexId}\n        css={[title(isSmallScreen), projects(isSmallScreen)]}\n        onClick={() => setShowDetails(\"my-experience\")}\n      >\n        <label ref={experienceLinkRef}>Experience</label>\n      </span>\n    </div>\n  )\n}\n"],"names":["overlayContainer","container","css","Palette","smallScreenContainer","skillsLayeredTitle","skills","isSmallScreen","aboutLayeredTitle","about","projectsLayeredTitle","projects","title","svgHidden","Home","overlay","homeTimeLine","parentId","useIsMounted","useSmallScreenMediaQuery","skillLinkRef","useRef","aboutLinkRef","experienceLinkRef","containerIndexId","aboutIndexId","skillsIndexId","experienceIndexId","indexElTo","x","y","setShowDetails","id","reverse","then","gsap","duration","scrollTo","ease","document","getElementById","style","overflowY","overflowX","removeEventListener","touchMoveListerner","passive","useLayoutEffect","current","LinkHover","undefined","to","autoAlpha","onReverseComplete","onStart","onComplete","play","type","baseFrequency","numOctaves","result","xChannelSelector","yChannelSelector","scale","in","in2","seed","showCross","color","onClick","ref"],"sourceRoot":""}