{"version":3,"file":"567-84baf546b67f123c7c31.js","mappings":"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","sources":["webpack://aquib-vadsaria-portfolio/./node_modules/splitting/dist/splitting.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Splitting = factory();\n})(this, function () {\n  'use strict';\n\n  var root = document;\n  var createText = root.createTextNode.bind(root);\n  /**\n   * # setProperty\n   * Apply a CSS var\n   * @param el{HTMLElement} \n   * @param varName {string} \n   * @param value {string|number}  \n   */\n\n  function setProperty(el, varName, value) {\n    el.style.setProperty(varName, value);\n  }\n  /**\n   * \n   * @param {Node} el \n   * @param {Node} child \n   */\n\n\n  function appendChild(el, child) {\n    return el.appendChild(child);\n  }\n\n  function createElement(parent, key, text, whitespace) {\n    var el = root.createElement('span');\n    key && (el.className = key);\n\n    if (text) {\n      !whitespace && el.setAttribute(\"data-\" + key, text);\n      el.textContent = text;\n    }\n\n    return parent && appendChild(parent, el) || el;\n  }\n\n  function getData(el, key) {\n    return el.getAttribute(\"data-\" + key);\n  }\n  /**\n   * \n   * @param e {import('../types').Target} \n   * @param parent {HTMLElement}\n   * @returns {HTMLElement[]}\n   */\n\n\n  function $(e, parent) {\n    return !e || e.length == 0 ? // null or empty string returns empty array\n    [] : e.nodeName ? // a single element is wrapped in an array\n    [e] : // selector and NodeList are converted to Element[]\n    [].slice.call(e[0].nodeName ? e : (parent || root).querySelectorAll(e));\n  }\n  /**\n   * Creates and fills an array with the value provided\n   * @template {T}\n   * @param {number} len\n   * @param {() => T} valueProvider\n   * @return {T}\n   */\n\n\n  function Array2D(len) {\n    var a = [];\n\n    for (; len--;) {\n      a[len] = [];\n    }\n\n    return a;\n  }\n\n  function each(items, fn) {\n    items && items.some(fn);\n  }\n\n  function selectFrom(obj) {\n    return function (key) {\n      return obj[key];\n    };\n  }\n  /**\n   * # Splitting.index\n   * Index split elements and add them to a Splitting instance.\n   *\n   * @param element {HTMLElement}\n   * @param key {string}\n   * @param items {HTMLElement[] | HTMLElement[][]}\n   */\n\n\n  function index(element, key, items) {\n    var prefix = '--' + key;\n    var cssVar = prefix + \"-index\";\n    each(items, function (items, i) {\n      if (Array.isArray(items)) {\n        each(items, function (item) {\n          setProperty(item, cssVar, i);\n        });\n      } else {\n        setProperty(items, cssVar, i);\n      }\n    });\n    setProperty(element, prefix + \"-total\", items.length);\n  }\n  /**\n   * @type {Record<string, import('./types').ISplittingPlugin>}\n   */\n\n\n  var plugins = {};\n  /**\n   * @param by {string}\n   * @param parent {string}\n   * @param deps {string[]}\n   * @return {string[]}\n   */\n\n  function resolvePlugins(by, parent, deps) {\n    // skip if already visited this dependency\n    var index = deps.indexOf(by);\n\n    if (index == -1) {\n      // if new to dependency array, add to the beginning\n      deps.unshift(by); // recursively call this function for all dependencies\n\n      each(plugins[by].depends, function (p) {\n        resolvePlugins(p, by, deps);\n      });\n    } else {\n      // if this dependency was added already move to the left of\n      // the parent dependency so it gets loaded in order\n      var indexOfParent = deps.indexOf(parent);\n      deps.splice(index, 1);\n      deps.splice(indexOfParent, 0, by);\n    }\n\n    return deps;\n  }\n  /**\n   * Internal utility for creating plugins... essentially to reduce\n   * the size of the library\n   * @param {string} by \n   * @param {string} key \n   * @param {string[]} depends \n   * @param {Function} split \n   * @returns {import('./types').ISplittingPlugin}\n   */\n\n\n  function createPlugin(by, depends, key, split) {\n    return {\n      by: by,\n      depends: depends,\n      key: key,\n      split: split\n    };\n  }\n  /**\n   *\n   * @param by {string}\n   * @returns {import('./types').ISplittingPlugin[]}\n   */\n\n\n  function resolve(by) {\n    return resolvePlugins(by, 0, []).map(selectFrom(plugins));\n  }\n  /**\n   * Adds a new plugin to splitting\n   * @param opts {import('./types').ISplittingPlugin}\n   */\n\n\n  function add(opts) {\n    plugins[opts.by] = opts;\n  }\n  /**\n   * # Splitting.split\n   * Split an element's textContent into individual elements\n   * @param el {Node} Element to split\n   * @param key {string}\n   * @param splitOn {string}\n   * @param includeSpace {boolean}\n   * @returns {HTMLElement[]}\n   */\n\n\n  function splitText(el, key, splitOn, includePrevious, preserveWhitespace) {\n    // Combine any strange text nodes or empty whitespace.\n    el.normalize(); // Use fragment to prevent unnecessary DOM thrashing.\n\n    var elements = [];\n    var F = document.createDocumentFragment();\n\n    if (includePrevious) {\n      elements.push(el.previousSibling);\n    }\n\n    var allElements = [];\n    $(el.childNodes).some(function (next) {\n      if (next.tagName && !next.hasChildNodes()) {\n        // keep elements without child nodes (no text and no children)\n        allElements.push(next);\n        return;\n      } // Recursively run through child nodes\n\n\n      if (next.childNodes && next.childNodes.length) {\n        allElements.push(next);\n        elements.push.apply(elements, splitText(next, key, splitOn, includePrevious, preserveWhitespace));\n        return;\n      } // Get the text to split, trimming out the whitespace\n\n      /** @type {string} */\n\n\n      var wholeText = next.wholeText || '';\n      var contents = wholeText.trim(); // If there's no text left after trimming whitespace, continue the loop\n\n      if (contents.length) {\n        // insert leading space if there was one\n        if (wholeText[0] === ' ') {\n          allElements.push(createText(' '));\n        } // Concatenate the split text children back into the full array\n\n\n        each(contents.split(splitOn), function (splitText, i) {\n          if (i && preserveWhitespace) {\n            allElements.push(createElement(F, \"whitespace\", \" \", preserveWhitespace));\n          }\n\n          var splitEl = createElement(F, key, splitText);\n          elements.push(splitEl);\n          allElements.push(splitEl);\n        }); // insert trailing space if there was one\n\n        if (wholeText[wholeText.length - 1] === ' ') {\n          allElements.push(createText(' '));\n        }\n      }\n    });\n    each(allElements, function (el) {\n      appendChild(F, el);\n    }); // Clear out the existing element\n\n    el.innerHTML = \"\";\n    appendChild(el, F);\n    return elements;\n  }\n  /** an empty value */\n\n\n  var _ = 0;\n\n  function copy(dest, src) {\n    for (var k in src) {\n      dest[k] = src[k];\n    }\n\n    return dest;\n  }\n\n  var WORDS = 'words';\n  var wordPlugin = createPlugin(\n  /*by: */\n  WORDS,\n  /*depends: */\n  _,\n  /*key: */\n  'word',\n  /*split: */\n  function (el) {\n    return splitText(el, 'word', /\\s+/, 0, 1);\n  });\n  var CHARS = \"chars\";\n  var charPlugin = createPlugin(\n  /*by: */\n  CHARS,\n  /*depends: */\n  [WORDS],\n  /*key: */\n  \"char\",\n  /*split: */\n  function (el, options, ctx) {\n    var results = [];\n    each(ctx[WORDS], function (word, i) {\n      results.push.apply(results, splitText(word, \"char\", \"\", options.whitespace && i));\n    });\n    return results;\n  });\n  /**\n   * # Splitting\n   * \n   * @param opts {import('./types').ISplittingOptions} \n   */\n\n  function Splitting(opts) {\n    opts = opts || {};\n    var key = opts.key;\n    return $(opts.target || '[data-splitting]').map(function (el) {\n      var ctx = el['🍌'];\n\n      if (!opts.force && ctx) {\n        return ctx;\n      }\n\n      ctx = el['🍌'] = {\n        el: el\n      };\n      var items = resolve(opts.by || getData(el, 'splitting') || CHARS);\n      var opts2 = copy({}, opts);\n      each(items, function (plugin) {\n        if (plugin.split) {\n          var pluginBy = plugin.by;\n          var key2 = (key ? '-' + key : '') + plugin.key;\n          var results = plugin.split(el, opts2, ctx);\n          key2 && index(el, key2, results);\n          ctx[pluginBy] = results;\n          el.classList.add(pluginBy);\n        }\n      });\n      el.classList.add('splitting');\n      return ctx;\n    });\n  }\n  /**\n   * # Splitting.html\n   * \n   * @param opts {import('./types').ISplittingOptions}\n   */\n\n\n  function html(opts) {\n    opts = opts || {};\n    var parent = opts.target = createElement();\n    parent.innerHTML = opts.content;\n    Splitting(opts);\n    return parent.outerHTML;\n  }\n\n  Splitting.html = html;\n  Splitting.add = add;\n\n  function detectGrid(el, options, side) {\n    var items = $(options.matching || el.children, el);\n    var c = {};\n    each(items, function (w) {\n      var val = Math.round(w[side]);\n      (c[val] || (c[val] = [])).push(w);\n    });\n    return Object.keys(c).map(Number).sort(byNumber).map(selectFrom(c));\n  }\n\n  function byNumber(a, b) {\n    return a - b;\n  }\n\n  var linePlugin = createPlugin(\n  /*by: */\n  'lines',\n  /*depends: */\n  [WORDS],\n  /*key: */\n  'line',\n  /*split: */\n  function (el, options, ctx) {\n    return detectGrid(el, {\n      matching: ctx[WORDS]\n    }, 'offsetTop');\n  });\n  var itemPlugin = createPlugin(\n  /*by: */\n  'items',\n  /*depends: */\n  _,\n  /*key: */\n  'item',\n  /*split: */\n  function (el, options) {\n    return $(options.matching || el.children, el);\n  });\n  var rowPlugin = createPlugin(\n  /*by: */\n  'rows',\n  /*depends: */\n  _,\n  /*key: */\n  'row',\n  /*split: */\n  function (el, options) {\n    return detectGrid(el, options, \"offsetTop\");\n  });\n  var columnPlugin = createPlugin(\n  /*by: */\n  'cols',\n  /*depends: */\n  _,\n  /*key: */\n  \"col\",\n  /*split: */\n  function (el, options) {\n    return detectGrid(el, options, \"offsetLeft\");\n  });\n  var gridPlugin = createPlugin(\n  /*by: */\n  'grid',\n  /*depends: */\n  ['rows', 'cols']);\n  var LAYOUT = \"layout\";\n  var layoutPlugin = createPlugin(\n  /*by: */\n  LAYOUT,\n  /*depends: */\n  _,\n  /*key: */\n  _,\n  /*split: */\n  function (el, opts) {\n    // detect and set options\n    var rows = opts.rows = +(opts.rows || getData(el, 'rows') || 1);\n    var columns = opts.columns = +(opts.columns || getData(el, 'columns') || 1); // Seek out the first <img> if the value is true \n\n    opts.image = opts.image || getData(el, 'image') || el.currentSrc || el.src;\n\n    if (opts.image) {\n      var img = $(\"img\", el)[0];\n      opts.image = img && (img.currentSrc || img.src);\n    } // add optional image to background\n\n\n    if (opts.image) {\n      setProperty(el, \"background-image\", \"url(\" + opts.image + \")\");\n    }\n\n    var totalCells = rows * columns;\n    var elements = [];\n    var container = createElement(_, \"cell-grid\");\n\n    while (totalCells--) {\n      // Create a span\n      var cell = createElement(container, \"cell\");\n      createElement(cell, \"cell-inner\");\n      elements.push(cell);\n    } // Append elements back into the parent\n\n\n    appendChild(el, container);\n    return elements;\n  });\n  var cellRowPlugin = createPlugin(\n  /*by: */\n  \"cellRows\",\n  /*depends: */\n  [LAYOUT],\n  /*key: */\n  \"row\",\n  /*split: */\n  function (el, opts, ctx) {\n    var rowCount = opts.rows;\n    var result = Array2D(rowCount);\n    each(ctx[LAYOUT], function (cell, i, src) {\n      result[Math.floor(i / (src.length / rowCount))].push(cell);\n    });\n    return result;\n  });\n  var cellColumnPlugin = createPlugin(\n  /*by: */\n  \"cellColumns\",\n  /*depends: */\n  [LAYOUT],\n  /*key: */\n  \"col\",\n  /*split: */\n  function (el, opts, ctx) {\n    var columnCount = opts.columns;\n    var result = Array2D(columnCount);\n    each(ctx[LAYOUT], function (cell, i) {\n      result[i % columnCount].push(cell);\n    });\n    return result;\n  });\n  var cellPlugin = createPlugin(\n  /*by: */\n  \"cells\",\n  /*depends: */\n  ['cellRows', 'cellColumns'],\n  /*key: */\n  \"cell\",\n  /*split: */\n  function (el, opt, ctx) {\n    // re-index the layout as the cells\n    return ctx[LAYOUT];\n  }); // install plugins\n  // word/char plugins\n\n  add(wordPlugin);\n  add(charPlugin);\n  add(linePlugin); // grid plugins\n\n  add(itemPlugin);\n  add(rowPlugin);\n  add(columnPlugin);\n  add(gridPlugin); // cell-layout plugins\n\n  add(layoutPlugin);\n  add(cellRowPlugin);\n  add(cellColumnPlugin);\n  add(cellPlugin);\n  return Splitting;\n});"],"names":["module","exports","root","document","createText","createTextNode","bind","setProperty","el","varName","value","style","appendChild","child","createElement","parent","key","text","whitespace","className","setAttribute","textContent","getData","getAttribute","$","e","length","nodeName","slice","call","querySelectorAll","Array2D","len","a","each","items","fn","some","selectFrom","obj","index","element","prefix","cssVar","i","Array","isArray","item","plugins","resolvePlugins","by","deps","indexOf","unshift","depends","p","indexOfParent","splice","createPlugin","split","resolve","map","add","opts","splitText","splitOn","includePrevious","preserveWhitespace","normalize","elements","F","createDocumentFragment","push","previousSibling","allElements","childNodes","next","tagName","hasChildNodes","apply","wholeText","contents","trim","splitEl","innerHTML","_","copy","dest","src","k","WORDS","wordPlugin","CHARS","charPlugin","options","ctx","results","word","Splitting","target","force","opts2","plugin","pluginBy","key2","classList","html","content","outerHTML","detectGrid","side","matching","children","c","w","val","Math","round","Object","keys","Number","sort","byNumber","b","linePlugin","itemPlugin","rowPlugin","columnPlugin","gridPlugin","LAYOUT","layoutPlugin","rows","columns","image","currentSrc","img","totalCells","container","cell","cellRowPlugin","rowCount","result","floor","cellColumnPlugin","columnCount","cellPlugin","opt","factory"],"sourceRoot":""}